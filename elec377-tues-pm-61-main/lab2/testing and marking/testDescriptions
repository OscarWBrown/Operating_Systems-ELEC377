We tested our shell by running a few tests to show that both the word parser and internal functions work correctly. Condensed versions of our tests are shown below and the files generated by script command are given at the bottom of this document.

doInternnalCommandTest:

    %> ls
    hello.c
    Makefile
    testing
    doInternalCommandTest.txt
    shell.c
    testtest1.txt
    shell
    hello
    %> pwd
    /home/20owb/elec377-tues-pm-61/lab2
    %> cd elec377-tues-pm-lp  61
    > ls
    lab3
    lab0
    lab1
    lab2
    %> cd lab2
    %> ls
    hello.c
    Makefile
    testing
    shell.c
    shell
    hello
    %> cd elec388-tues-pm-12345
    Error: couldn't change to target directory%> this should not work
    Error: File does NOT exist
    Error: File does NOT exist
    %> exit

As can be seen in the above condensed test script, the ls command corrcetly displays the files located in the 
elec377-tues-pm-61/lab2 directory,and the elec377-tues-pm-61 directory. 
The pwd command correctly displays the current working directory when we were working in the directory /home/20owb/elec377-tues-pm-61/lab2
The cd command correctly moved us from elec377-tues-pm-61 to the directory specified which was elec377-tues-pm-61/lab2
The exit command also successfully exited the shell and was again used to exit the script recording. 

splitCommandLineTest:
%> hello  test 
2
0: hello
1: test
2: c3c7f4f0
%>     hello test 
2
0: hello
1: test
2: c3c7f4f0
%>   hello    test      
2
0: hello
1: test
2: c3c7f4f0
%>   hello  this is a   test   again   
2
0: hello
1: test
3: is
4: a
5: test
6: again
7: c3c7f4f0
%> exit

As can be seen in the above condensed test recording, the splitCommandLine function corrcetly tokenized the command line
while ignoring leading spaces, ending spaces, and multiple spaces between words. It successfully stored a pointer to the 
beginning of each word which get displayed in order while also displaying the address in memory immediatley after the 
last word. 

NOTE: full versions of the testing scripts are doInternalCommandTest.txt and splitCommandTest.txt
